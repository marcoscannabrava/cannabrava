{"version":3,"file":"component---src-pages-index-js-e09eb1670804684999aa.js","mappings":"4PAGe,SAASA,IAkEtB,OA/DAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAASC,SAASC,eAAe,cACjCC,EAAMH,EAAOI,WAAW,MACxBC,EAAQL,EAAOK,MACfC,EAASN,EAAOM,OAChBC,EAAYC,KAAKC,MAAMJ,EAPd,GAQTK,EAAaF,KAAKC,MAAMH,EARf,GAUf,IAAIK,EAAOC,IACX,SAASA,IACP,OAAOC,MAAMC,KAAK,CAAEC,OAAQL,IAAc,IACxCG,MAAMC,KAAK,CAAEC,OAAQR,IAAa,IAAMC,KAAKQ,SAAW,MAE5D,CAaA,SAASC,EAAeC,EAAGC,GACzB,IAAIC,EAAQ,EACZ,IAAK,IAAIC,GAAK,EAAGA,GAAK,EAAGA,IACvB,IAAK,IAAIC,GAAK,EAAGA,GAAK,EAAGA,IAAK,CAC5B,GAAU,IAAND,GAAiB,IAANC,EAAS,SACxB,MAAMC,GAAML,EAAIG,EAAId,GAAaA,EAEjCa,GAAST,GADGQ,EAAIG,EAAIZ,GAAcA,GAChBa,GAAM,EAAI,CAC9B,CAEF,OAAOH,CACT,EAiBA,SAASI,KAfT,WACE,MAAMC,EAAUb,IAChB,IAAK,IAAIO,EAAI,EAAGA,EAAIT,EAAYS,IAC9B,IAAK,IAAID,EAAI,EAAGA,EAAIX,EAAWW,IAAK,CAClC,MAAMQ,EAAYT,EAAeC,EAAGC,GAChCR,EAAKQ,GAAGD,GACVO,EAAQN,GAAGD,GAAmB,IAAdQ,GAAiC,IAAdA,EAEnCD,EAAQN,GAAGD,GAAmB,IAAdQ,CAEpB,CAEFf,EAAOc,CACT,CAGEE,GAxCF,WACExB,EAAIyB,UAAU,EAAG,EAAGvB,EAAOC,GAC3B,IAAK,IAAIa,EAAI,EAAGA,EAAIT,EAAYS,IAC9B,IAAK,IAAID,EAAI,EAAGA,EAAIX,EAAWW,IACzBP,EAAKQ,GAAGD,IACVf,EAAI0B,SAtBG,EAsBMX,EAtBN,EAsBoBC,EAtBpB,IA0Bf,CAgCEW,GACAC,sBAAsBP,EACxB,CAEAA,EAAU,GACT,IAEI,uBAAKQ,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,IAAK,QAChE,0BAAQC,GAAG,aAAa/B,MAAM,MAAMC,OAAO,QAC3C,yBAAG,8CAET,CCPA,MA1DkB,IAAyB,IAAD,MAAvB,KAAE+B,EAAI,SAAEC,GAAU,EACnC,MAAMC,GAAkC,QAAtB,EAAAF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,QACzCC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAM5B,OAEN,gBAAC,IAAM,CAACuB,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAG,MACJ,yBAAG,8JAUP,gBAAC,IAAM,CAACD,SAAUA,EAAUI,MAAOH,GAEjC,2BACGI,EAAMG,KAAIC,IACT,MAAML,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KAEpD,OACE,uBAAKC,IAAKJ,EAAKE,OAAOC,MACpB,2BACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAIT,EAAKE,OAAOC,KAAMO,SAAS,OACnC,wBAAMA,SAAS,YAAYf,KAG/B,6BAAQK,EAAKC,YAAYU,OAE3B,2BAASN,UAAU,eACjB,yBACEO,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,SAE/CL,SAAS,kBAIX,KAIZ,uBAAKL,UAAU,YACf,gBAACtD,EAAU,MACJ,EAWN,MAAMiE,EAAO,IAAM,gBAAC,IAAI,CAACrB,MAAM,a","sources":["webpack://gatsby-starter-blog/./src/components/GameOfLife.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["'use client'\nimport React, { useEffect } from \"react\";\n\nexport default function GameOfLife() {\n  const cellSize = 8;\n\n  useEffect(() => {\n    const canvas = document.getElementById(\"gameCanvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const width = canvas.width;\n    const height = canvas.height;\n    const gridWidth = Math.floor(width / cellSize);\n    const gridHeight = Math.floor(height / cellSize);\n\n    let grid = createGrid();\n    function createGrid() {\n      return Array.from({ length: gridHeight }, () =>\n        Array.from({ length: gridWidth }, () => Math.random() < 0.5)\n      );\n    }\n    \n    function drawGrid() {\n      ctx.clearRect(0, 0, width, height);\n      for (let y = 0; y < gridHeight; y++) {\n        for (let x = 0; x < gridWidth; x++) {\n          if (grid[y][x]) {\n            ctx.fillRect(x * cellSize, y * cellSize, cellSize, cellSize);\n          }\n        }\n      }\n    }\n    \n    function countNeighbors(x, y) {\n      let count = 0;\n      for (let i = -1; i <= 1; i++) {\n        for (let j = -1; j <= 1; j++) {\n          if (i === 0 && j === 0) continue;\n          const nx = (x + i + gridWidth) % gridWidth;\n          const ny = (y + j + gridHeight) % gridHeight;\n          count += grid[ny][nx] ? 1 : 0;\n        }\n      }\n      return count;\n    }\n    \n    function updateGrid() {\n      const newGrid = createGrid();\n      for (let y = 0; y < gridHeight; y++) {\n        for (let x = 0; x < gridWidth; x++) {\n          const neighbors = countNeighbors(x, y);\n          if (grid[y][x]) {\n            newGrid[y][x] = neighbors === 2 || neighbors === 3;\n          } else {\n            newGrid[y][x] = neighbors === 3;\n          }\n        }\n      }\n      grid = newGrid;\n    }\n    \n    function gameLoop() {\n      updateGrid();\n      drawGrid();  \n      requestAnimationFrame(gameLoop);\n    }\n    \n    gameLoop();\n  }, []);\n\n  return <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n      <canvas id=\"gameCanvas\" width=\"800\" height=\"600\"></canvas>\n      <i>Life is the eternal fight against entropy.</i>\n    </div>\n}","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Meta from \"../components/meta\"\nimport GameOfLife from \"../components/GameOfLife\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      {/* <Bio /> */}\n      <div>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <div key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section className=\"description\">\n                  <small\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </div>\n          )\n        })}\n      </div>\n      <div className=\"divider\"></div>\n      <GameOfLife />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Meta title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["GameOfLife","useEffect","canvas","document","getElementById","ctx","getContext","width","height","gridWidth","Math","floor","gridHeight","grid","createGrid","Array","from","length","random","countNeighbors","x","y","count","i","j","nx","gameLoop","newGrid","neighbors","updateGrid","clearRect","fillRect","drawGrid","requestAnimationFrame","style","display","flexDirection","gap","id","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","Head"],"sourceRoot":""}